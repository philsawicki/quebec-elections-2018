{"version":3,"file":"app.js","sources":["../src/color-utilities.ts","../src/settings.ts","../src/application.ts","../src/main.ts"],"sourcesContent":["/**\r\n * Generate gradient step colors.\r\n *\r\n * @param from Gradient start color (in hex format).\r\n * @param to Gradient end color (in hex format).\r\n * @param nbSteps Number of gradient steps to generate.\r\n */\r\nexport function generateColorGradient(from: string, to: string, nbSteps: number) {\r\n    const parsedFrom = from.replace('#', '');\r\n    const splitFrom = [\r\n        parseInt(parsedFrom.substr(0, 2), 16),\r\n        parseInt(parsedFrom.substr(2, 2), 16),\r\n        parseInt(parsedFrom.substr(4, 2), 16)\r\n    ];\r\n\r\n    const parsedTo = to.replace('#', '');\r\n    const splitTo = [\r\n        parseInt(parsedTo.substr(0, 2), 16),\r\n        parseInt(parsedTo.substr(2, 2), 16),\r\n        parseInt(parsedTo.substr(4, 2), 16)\r\n    ];\r\n\r\n    const colorRanges = [\r\n        splitTo[0] - splitFrom[0],\r\n        splitTo[1] - splitFrom[1],\r\n        splitTo[2] - splitFrom[2]\r\n    ];\r\n\r\n    const gradientColors: string[] = [];\r\n    for (let i = 0; i <= nbSteps; ++i) {\r\n        const colorStep = [\r\n            Math.floor(splitFrom[0] + colorRanges[0] * i / nbSteps).toString(16),\r\n            Math.floor(splitFrom[1] + colorRanges[1] * i / nbSteps).toString(16),\r\n            Math.floor(splitFrom[2] + colorRanges[2] * i / nbSteps).toString(16)\r\n        ];\r\n        gradientColors.push(`#${ colorStep.join('') }`);\r\n    }\r\n    return gradientColors;\r\n}\r\n","/**\r\n * Timestamp of the poll's closing time. Once past this date, the results from\r\n * the 2018 election will be fetched. Before this date, the results of the\r\n * previous general election will be shown instead.\r\n */\r\nexport const POLL_CLOSE_TIME = Date.parse('2018-10-01T20:00:00.000-04:00');\r\n\r\n/**\r\n * Total number of seats.\r\n */\r\nexport const TOTAL_NB_SEATS = 125;\r\n\r\n/**\r\n * Refresh interval for the data.\r\n */\r\nexport const REFRESH_INTERVAL = 5 * 1000;\r\n","import { generateColorGradient } from './color-utilities';\r\nimport { POLL_CLOSE_TIME, REFRESH_INTERVAL, TOTAL_NB_SEATS } from './settings';\r\n\r\n\r\n/**\r\n * Application.\r\n */\r\nexport default class Application {\r\n    /**\r\n     * Chart for the number of Votes per Party.\r\n     */\r\n    protected VotesChart: Chart = null;\r\n    /**\r\n     * Chart for the number of Seats per Party.\r\n     */\r\n    protected SeatsChart: Chart = null;\r\n    /**\r\n     * ID of the Riding currently being displayed.\r\n     */\r\n    protected SelectedRidingID: number = -1;\r\n    /**\r\n     * List of Riding data.\r\n     */\r\n    protected Ridings: Circonscription[] = [];\r\n\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        this.onResultsLoaded = this.onResultsLoaded.bind(this);\r\n\r\n        this.installListeners();\r\n        this.setupCharts();\r\n        this.installJONPCallback();\r\n        this.fetchData();\r\n    }\r\n\r\n    /**\r\n     * Create Charts for number of Votes and Seats per Party.\r\n     */\r\n    protected setupCharts() {\r\n        const initialData: number[] = [];\r\n\r\n        const createChartConfig = (gradientFrom: string, gradientTo: string) => {\r\n            const colorPalette = generateColorGradient(gradientFrom, gradientTo, 2);\r\n\r\n            return {\r\n                type: 'doughnut',\r\n                data: {\r\n                    datasets: [{\r\n                        data: initialData,\r\n                        borderWidth: [0, 0, 0, 0, 0, 0],\r\n                        backgroundColor: colorPalette,\r\n                        hoverBackgroundColor: colorPalette\r\n                    }]\r\n                },\r\n                options: {\r\n                    cutoutPercentage: 90,\r\n                    legend: {\r\n                        position: 'left'\r\n                    },\r\n                    animation: {\r\n                        animateRotate: true\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        // Create \"Seats\" Chart:\r\n        // Gradient palette: ['#da4d60', '#e96577', '#f28695', '#ffb6c1', '#e5e5e5']\r\n        const seatsCanvas = document.getElementById('seats') as HTMLCanvasElement;\r\n        if (seatsCanvas !== null) {\r\n            this.SeatsChart = new Chart(\r\n                seatsCanvas,\r\n                createChartConfig('#da4d60', '#e5e5e5')\r\n            );\r\n        }\r\n\r\n        // Create \"Votes\" Chart:\r\n        // Gradient palette: ['#6933b9', '#8553d1', '#a372ec', '#be9df1', '#e5e5e5']\r\n        const votesCanvas = document.getElementById('votes') as HTMLCanvasElement;\r\n        if (votesCanvas !== null) {\r\n            this.VotesChart = new Chart(\r\n                votesCanvas,\r\n                createChartConfig('#6933b9', '#e5e5e5')\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Install the JSONP callback used to load remote data.\r\n     */\r\n    protected installJONPCallback() {\r\n        window.callback = this.onResultsLoaded;\r\n    }\r\n\r\n    /**\r\n     * Install DOM Listeners.\r\n     */\r\n    protected installListeners() {\r\n        const ridingsDropDownElement = document.getElementById('ridings-list') as HTMLSelectElement;\r\n        if (ridingsDropDownElement !== null) {\r\n            ridingsDropDownElement.addEventListener('change', e => {\r\n                this.SelectedRidingID = parseInt(ridingsDropDownElement.options[ridingsDropDownElement.selectedIndex].value, 10);\r\n                const selectedRiding = this.Ridings.filter(riding => riding.numeroCirconscription === this.SelectedRidingID);\r\n                this.updateRiding(selectedRiding[0]);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch results from the remote web service.\r\n     */\r\n    protected async fetchData() {\r\n        const refresh = () => {\r\n            setTimeout(() => {\r\n                this.fetchData();\r\n            }, REFRESH_INTERVAL);\r\n        };\r\n\r\n        const JSONP_ELEMENT_ID = 'jsonp-data';\r\n        const NOW = Date.now();\r\n        const url = NOW > POLL_CLOSE_TIME\r\n            ? `https://dgeq.org/resultats.js?_=${NOW}`\r\n            : `https://dgeq.org/doc/gen7-4-2014/resultats.js?_=${NOW}`;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let scriptElement = document.getElementById(JSONP_ELEMENT_ID) as HTMLScriptElement;\r\n            if (scriptElement !== null) {\r\n                document.body.removeChild(scriptElement);\r\n            }\r\n\r\n            scriptElement = document.createElement('script');\r\n            scriptElement.id = JSONP_ELEMENT_ID;\r\n            scriptElement.charset = 'utf-8';\r\n            scriptElement.async = true;\r\n            scriptElement.defer = true;\r\n            scriptElement.addEventListener('load', e => {\r\n                refresh();\r\n                resolve();\r\n            });\r\n            scriptElement.addEventListener('error', e => {\r\n                refresh();\r\n                reject();\r\n            });\r\n            scriptElement.src = url;\r\n            document.body.appendChild(scriptElement);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback executed upon loading results from the remote web service.\r\n     *\r\n     * @param results Results loaded from the remote web service.\r\n     */\r\n    protected onResultsLoaded(results: Results) {\r\n        const parties = [...results.statistiques.partisPolitiques];\r\n        const sortedParties = parties.sort((a, b) => {\r\n            return (a.nbCirconscriptionsEnAvance > b.nbCirconscriptionsEnAvance)\r\n                ? -1\r\n                : (a.nbCirconscriptionsEnAvance < b.nbCirconscriptionsEnAvance)\r\n                    ? 1 : 0;\r\n        });\r\n\r\n        const partiesList = document.getElementById('parties-list');\r\n        if (partiesList !== null) {\r\n            partiesList.innerHTML = sortedParties\r\n                .map((party, i) => {\r\n                    return `\r\n                        <tr>\r\n                            <th scope=\"row\" class=\"text-right\">${i + 1}</th>\r\n                            <td>${party.nomPartiPolitique}</td>\r\n                            <td>${this.sanitizePartyAbbreviation(party.abreviationPartiPolitique)}</td>\r\n                            <td class=\"text-right\">${party.tauxVoteTotal.toFixed(4)}%</td>\r\n                            <td class=\"text-right\">${party.nbCirconscriptionsEnAvance}</td>\r\n                        </tr>`;\r\n                })\r\n                .join('');\r\n        }\r\n\r\n        // Store data about the Ridings:\r\n        this.Ridings = results.circonscriptions;\r\n\r\n        // Update dashboard data:\r\n        this.updateOverviewStats(results);\r\n        this.updateStationsRidingsResults(results);\r\n        this.updateRidings(results);\r\n        this.drawVotesChart(results);\r\n        this.drawSeatsChart(results);\r\n    }\r\n\r\n    /**\r\n     * Update results for the top 4 political parties.\r\n     *\r\n     * @param results Results loaded from the remote web service.\r\n     */\r\n    protected updateOverviewStats(results: Results) {\r\n        const resultCards = document.querySelectorAll('.result-card');\r\n        const nbResults = Math.min(\r\n            resultCards.length,\r\n            results.statistiques.partisPolitiques.length\r\n        );\r\n\r\n        for (let i = 0; i < nbResults; ++i) {\r\n            const party = results.statistiques.partisPolitiques[i];\r\n            if (party.tauxCirconscriptionsEnAvance > 0) {\r\n                const resultCard = resultCards[i];\r\n\r\n                const partyName: HTMLDivElement = resultCard.querySelector('.party-name');\r\n                if (partyName !== null) {\r\n                    partyName.innerText = this.sanitizePartyAbbreviation(party.abreviationPartiPolitique);\r\n                }\r\n\r\n                const seatCounter: HTMLDivElement = resultCard.querySelector('.count');\r\n                if (seatCounter !== null) {\r\n                    seatCounter.innerText = party.nbCirconscriptionsEnAvance.toString();\r\n                }\r\n\r\n                const voteProgressBar: HTMLDivElement = resultCard.querySelector(`.dashbg-${i + 1}`);\r\n                if (voteProgressBar !== null) {\r\n                    voteProgressBar.style.width = `${party.tauxVoteTotal}%`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update polling station results.\r\n     *\r\n     * @param results Results loaded from the remote web service.\r\n     */\r\n    protected updateStationsRidingsResults(results: Results) {\r\n        const { statistiques } = results;\r\n\r\n        const stationsResults = document.querySelector('.stations-results');\r\n        if (stationsResults !== null) {\r\n            const count: HTMLElement = stationsResults.querySelector('.count');\r\n            if (count !== null) {\r\n                count.innerText = statistiques.nbBureauVoteRempli.toLocaleString();\r\n            }\r\n\r\n            const progressBar: HTMLDivElement = stationsResults.querySelector('div[role=\"progressbar\"]');\r\n            if (progressBar !== null) {\r\n                progressBar.style.width = `${statistiques.tauxBureauVoteRempli}%`;\r\n            }\r\n        }\r\n\r\n        const ridingsResults = document.querySelector('.ridings-results');\r\n        if (ridingsResults !== null) {\r\n            const count: HTMLElement = ridingsResults.querySelector('.count');\r\n            if (count !== null) {\r\n                count.innerText = statistiques.nbCirconscriptionAvecResultat.toLocaleString();\r\n            }\r\n\r\n            const progressBar: HTMLDivElement = ridingsResults.querySelector('div[role=\"progressbar\"]');\r\n            if (progressBar !== null) {\r\n                progressBar.style.width = `${100.0 - statistiques.tauxCirconscriptionSansResultat}%`\r\n            }\r\n        }\r\n\r\n        const votesCast = document.getElementById('votes-cast');\r\n        if (votesCast !== null) {\r\n            votesCast.innerText = statistiques.nbVoteExerce.toLocaleString();\r\n        }\r\n        const partPercent = document.getElementById('part-rate');\r\n        if (partPercent !== null) {\r\n            partPercent.style.width = `${statistiques.tauxParticipationTotal}%`;\r\n        }\r\n\r\n        const validVotes = document.getElementById('valid-votes');\r\n        if (validVotes !== null) {\r\n            validVotes.innerText = statistiques.nbVoteValide.toLocaleString();\r\n        }\r\n        const validVotesRate = document.getElementById('valid-votes-rate');\r\n        if (validVotesRate !== null) {\r\n            validVotesRate.style.width = `${statistiques.nbVoteValide * 100 / statistiques.nbVoteExerce}%`;\r\n        }\r\n\r\n        const rejectedVotes = document.getElementById('rejected-votes');\r\n        if (rejectedVotes !== null) {\r\n            rejectedVotes.innerText = statistiques.nbVoteRejete.toLocaleString();\r\n        }\r\n        const rejectedVoteRate = document.getElementById('rejected-vote-rate');\r\n        if (rejectedVoteRate !== null) {\r\n            rejectedVoteRate.style.width = `${statistiques.nbVoteRejete * 100 / statistiques.nbVoteExerce}%`;\r\n        }\r\n\r\n        const participationRate = document.getElementById('participation-rate');\r\n        if (participationRate !== null) {\r\n            const participationRateValue = parseFloat(statistiques.tauxParticipationTotal);\r\n            const participationRateLabel = isNaN(participationRateValue)\r\n                ? '&mdash;'\r\n                : `${participationRateValue}%`;\r\n            participationRate.innerHTML = participationRateLabel;\r\n        }\r\n\r\n\r\n        // Update the timestamp of the last refresh time:\r\n        const lastUpdatedDate = document.getElementById('last-update-date');\r\n        const lastUpdateTime = document.getElementById('last-update-time');\r\n        if (lastUpdatedDate !== null && lastUpdateTime !== null) {\r\n            const lastUpdateDate = new Date(\r\n                Date.parse(statistiques.iso8601DateMAJ.replace(',', '.'))\r\n            );\r\n            lastUpdatedDate.innerText = lastUpdateDate.toLocaleDateString();\r\n            lastUpdateTime.innerText = lastUpdateDate.toLocaleTimeString();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the Chart for the number of Seats per Party.\r\n     *\r\n     * @param results Results loaded from the remote web service.\r\n     */\r\n    protected drawSeatsChart(results: Results) {\r\n        const { statistiques } = results;\r\n\r\n        const currentNBSeats = statistiques.partisPolitiques\r\n            .reduce((accumulator, currentParty) => {\r\n                return accumulator + currentParty.nbCirconscriptionsEnAvance;\r\n            }, 0);\r\n        const seats = [\r\n            ...statistiques.partisPolitiques\r\n                .filter(party => party.nbCirconscriptionsEnAvance > 0)\r\n                .map(party => party.nbCirconscriptionsEnAvance),\r\n            TOTAL_NB_SEATS - currentNBSeats\r\n        ];\r\n        const potentialLabels = [\r\n            ...statistiques.partisPolitiques\r\n                .filter(party => party.nbCirconscriptionsEnAvance > 0)\r\n                .map(party => this.sanitizePartyAbbreviation(party.abreviationPartiPolitique)),\r\n            'Others'\r\n        ];\r\n        const labels = potentialLabels.length > 1 ? potentialLabels : ['N./A.'];\r\n\r\n        if (this.SeatsChart !== null) {\r\n            const colors = this.SeatsChart.data.datasets[0].backgroundColor;\r\n            const colorPalette = generateColorGradient(\r\n                colors[0], // Gradient start color\r\n                colors[colors.length - 1], // Gradient end color\r\n                labels.length // Number of gradient steps to generate\r\n            );\r\n\r\n            this.SeatsChart.data.labels = labels;\r\n            this.SeatsChart.data.datasets[0].data = seats;\r\n            this.SeatsChart.data.datasets[0].backgroundColor = colorPalette;\r\n            this.SeatsChart.data.datasets[0].hoverBackgroundColor = colorPalette;\r\n            this.SeatsChart.update();\r\n        }\r\n\r\n        const leadingPartyLabel = document.getElementById('leading-party-by-seats');\r\n        if (leadingPartyLabel !== null && labels.length > 0) {\r\n            leadingPartyLabel.innerText = labels[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the Chart for the number of Votes per Party.\r\n     *\r\n     * @param results Results loaded from the remote web service.\r\n     */\r\n    protected drawVotesChart(results: Results) {\r\n        const { statistiques } = results;\r\n\r\n        const filteredParties = statistiques.partisPolitiques\r\n            .filter(party => party.nbCirconscriptionsEnAvance > 0);\r\n\r\n        const NB_CURRENT_PERCENT = filteredParties\r\n            .reduce((accumulator, current) => accumulator + current.tauxVoteTotal, 0);\r\n        const votes = [\r\n            ...filteredParties.map(party => party.tauxVoteTotal),\r\n            100.0 - NB_CURRENT_PERCENT\r\n        ];\r\n\r\n        const potentialLabels = [\r\n            ...filteredParties.map(party => this.sanitizePartyAbbreviation(party.abreviationPartiPolitique)),\r\n            'Others'\r\n        ];\r\n        const labels = potentialLabels.length > 1 ? potentialLabels : ['N./A.'];\r\n\r\n        if (this.VotesChart !== null) {\r\n            const colors = this.VotesChart.data.datasets[0].backgroundColor;\r\n            const colorPalette = generateColorGradient(\r\n                colors[0], // Gradient start color\r\n                colors[colors.length - 1], // Gradient end color\r\n                labels.length // Number of gradient steps to generate\r\n            );\r\n\r\n            this.VotesChart.data.labels = labels;\r\n            this.VotesChart.data.datasets[0].data = votes;\r\n            this.VotesChart.data.datasets[0].backgroundColor = colorPalette;\r\n            this.VotesChart.data.datasets[0].hoverBackgroundColor = colorPalette;\r\n            this.VotesChart.update();\r\n        }\r\n\r\n        const leadingPartyLabel = document.getElementById('leading-party-by-votes');\r\n        if (leadingPartyLabel !== null && labels.length > 0) {\r\n            leadingPartyLabel.innerText = labels[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the data about the Riding currently displayed.\r\n     *\r\n     * @param results Results loaded from the remote web service.\r\n     */\r\n    protected updateRidings(results: Results) {\r\n        // Update the list of available ridings:\r\n        const ridingsDropDownElement = document.getElementById('ridings-list');\r\n        if (ridingsDropDownElement !== null) {\r\n            ridingsDropDownElement.innerHTML = results.circonscriptions\r\n                .map(riding => {\r\n                    const isSelected = this.SelectedRidingID === riding.numeroCirconscription\r\n                        ? 'selected=\"selected\"'\r\n                        : '';\r\n                    return `\r\n                        <option ${isSelected} value=\"${riding.numeroCirconscription}\">\r\n                            ${riding.nomCirconscription}\r\n                        </option>\r\n                    `;\r\n                })\r\n                .join('');\r\n        }\r\n\r\n        // Update the riding currently displayed:\r\n        if (this.SelectedRidingID !== -1) {\r\n            const selectedRiding = results.circonscriptions\r\n                .filter(riding => riding.numeroCirconscription === this.SelectedRidingID);\r\n            this.updateRiding(selectedRiding[0]);\r\n        } else if (results.circonscriptions.length > 0) {\r\n            this.updateRiding(results.circonscriptions[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the Riding currently displayed.\r\n     *\r\n     * @param riding Data about the Riding currently displayed.\r\n     */\r\n    protected updateRiding(riding: Circonscription) {\r\n        const ridingCandidatesList = document.getElementById('riding-candidates-list');\r\n        if (ridingCandidatesList !== null) {\r\n            ridingCandidatesList.innerHTML = riding.candidats\r\n                .map((candidate, i) => {\r\n                    const advanceVotes = candidate.nbVoteAvance > 0\r\n                        ? `<span class=\"text-success\">\r\n                                <i class=\"fa fa-caret-up\"></i> ${candidate.nbVoteAvance.toLocaleString()}\r\n                            </span>`\r\n                        : '';\r\n                    return `\r\n                        <tr>\r\n                            <th scope=\"row\" class=\"text-right\">${i + 1}</th>\r\n                            <td>${this.sanitizePartyAbbreviation(candidate.abreviationPartiPolitique)}</td>\r\n                            <td>${candidate.prenom} ${candidate.nom}</td>\r\n                            <td class=\"text-right\">${candidate.nbVoteTotal.toLocaleString()}</td>\r\n                            <td class=\"text-left\">${advanceVotes}</td>\r\n                            <td class=\"text-right\">${candidate.tauxVote.toFixed(2)}%</td>\r\n                        </tr>\r\n                    `;\r\n                })\r\n                .join('');\r\n        }\r\n\r\n        const ridingStationsComplete = document.getElementById('riding-stations-complete');\r\n        if (ridingStationsComplete !== null) {\r\n            ridingStationsComplete.innerText = riding.nbBureauComplete.toLocaleString();\r\n        }\r\n\r\n        const ridingStationsTotal = document.getElementById('riding-stations-total');\r\n        if (ridingStationsTotal !== null) {\r\n            ridingStationsTotal.innerText = riding.nbBureauTotal.toLocaleString();\r\n        }\r\n\r\n        const ridingRegisteredVoters = document.getElementById('riding-registered-voters');\r\n        if (ridingRegisteredVoters !== null) {\r\n            ridingRegisteredVoters.innerText = riding.nbElecteurInscrit.toLocaleString();\r\n        }\r\n\r\n        const ridingParticipationRate = document.getElementById('riding-participation-rate');\r\n        if (ridingParticipationRate !== null) {\r\n            const participationRateValue = parseFloat(riding.tauxParticipation);\r\n            const participationRateLabel = isNaN(participationRateValue)\r\n                ? '&mdash;'\r\n                : `${participationRateValue.toFixed(2)}%`;\r\n            ridingParticipationRate.innerHTML = participationRateLabel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shorten the given Political Party name.\r\n     *\r\n     * @param abbreviation Abbreviation for the Political Party to sanitize.\r\n     * @return The shortened version of the abbreviated Political Party name.\r\n     */\r\n    protected sanitizePartyAbbreviation(abbreviation: string) {\r\n        switch (abbreviation.toUpperCase()) {\r\n            case 'P.L.Q./Q.L.P.':\r\n                return 'P.L.Q.';\r\n            case 'C.A.Q.-É.F.L.':\r\n                return 'C.A.Q.';\r\n            case 'P.C.Q./C.P.Q.':\r\n            case 'É.A.P. - P.C.Q.':\r\n                return 'P.C.Q.';\r\n            case 'P.V.Q./G.P.Q.':\r\n                return 'P.V.Q.';\r\n            case 'U.C.Q./Q.C.U.':\r\n                return 'U.C.Q.';\r\n            case 'O.N. - P.I.Q.':\r\n                return 'O.N.';\r\n            default:\r\n                return abbreviation.toUpperCase();\r\n        }\r\n    }\r\n}\r\n","import Application from './application';\r\n\r\n\r\nconst application = new Application();\r\n"],"names":[],"mappings":"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"}